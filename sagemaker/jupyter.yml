Description: "Basic NotebookInstance test update to a different instance type"
Parameters:
  SageMakerRepo:
    Description: github clone url
    Type: String
    Default: "git@github.com:ICFI/dragon.git"
  UserName:
    Description: Name of the user
    Type: String
  Email:
    Description: Email address for the user
    Type: String
  VolumeSize:
    Description: volume size in GB
    Type: Number
    Default: 200
  NotebookInstanceType:
    Description: Notebook instance type
    Type: String
    Default: ml.t2.large
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.t3.medium
      - ml.t3.large
      - ml.t3.xlarge
      - ml.t3.2xlarge
      - ml.m5.medium
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
      - ml.c5d.xlarge
      - ml.c5d.2xlarge
      - ml.c5d.4xlarge
      - ml.c5d.9xlarge
      - ml.c5d.18xlarge
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
Resources:
  BasicNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      NotebookInstanceName: !Ref 'AWS::StackName'
      InstanceType: !Ref NotebookInstanceType
      RoleArn: !GetAtt ExecutionRole.Arn
      VolumeSizeInGB: !Ref VolumeSize
      LifecycleConfigName: !GetAtt BasicNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
  BasicNotebookInstanceLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnStart:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash -x
              sudo -u ec2-user -i <<'EOF'

              mkdir -p ~/.ssh

              aws secretsmanager get-secret-value --secret-id GitDeployPrivKey | jq .SecretString -r | sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba'  > ~/.ssh/id_rsa
              aws secretsmanager get-secret-value --secret-id GitDeployPubKey | jq .SecretString -r | sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba'  > ~/.ssh/id_rsa.pub

              cat > ~/.ssh/config << HOSTCHECKING
              Host *
                 StrictHostKeyChecking no
              HOSTCHECKING

              chmod 600 ~/.ssh/*


              git config --global user.name "${UserName}"
              git config --global user.email ${Email}

              cd SageMaker

              git clone ${SageMakerRepo}


  ExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
        - "arn:aws:iam::aws:policy/AmazonRDSFullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"
        - "arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess"
        - "arn:aws:iam::aws:policy/SecretsManagerReadWrite"
      Policies:
        -
          PolicyName: "sm-execution-inline-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "sts:GetFederationToken"
                  - "sts:GetCallerIdentity"
                Resource: "*"

Outputs:
  BasicNotebookInstanceId:
    Value: !Ref BasicNotebookInstance
